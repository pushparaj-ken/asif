generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/@prisma/asif/client/prisma-schema"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int         @id @default(autoincrement())
  name      String
  slug      String      @unique @default(cuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      AdminUser[]
}

model AdminUser {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  roleId      Int
  slug        String   @unique @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  firstname   String   @default(" ")
  isactive    Int      @default(0)
  lastname    String   @default(" ")
  phonenumber String   @default(" ")
  role        Role     @relation(fields: [roleId], references: [id])

  @@index([roleId], map: "AdminUser_roleId_fkey")
}

model Banner {
  id               Int      @id @default(autoincrement())
  title            String
  shortDescription String   @db.VarChar(255)
  buttonName       String
  link             String
  slug             String   @unique @default(cuid())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  youtubelink      String   @db.VarChar(255)
  image            Image[]
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  bannerId  Int
  slug      String   @unique @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  banner    Banner   @relation(fields: [bannerId], references: [id])

  @@index([bannerId], map: "Image_bannerId_fkey")
}

model Tab {
  id        Int        @id @default(autoincrement())
  name      String
  orderby   Int
  slug      String     @unique @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    Int        @default(0)
  category  Category[]
}

model Category {
  id            Int      @id @default(autoincrement())
  name          String
  categoryImage String
  tabId         Int
  orderby       Int
  slug          String   @unique @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  status        Int      @default(0)
  tab           Tab      @relation(fields: [tabId], references: [id])
  Course        Course[]

  @@index([tabId], map: "Category_tabId_fkey")
}

model Course {
  id               Int        @id @default(autoincrement())
  name             String
  courseImage      String
  coursethumbImage String
  courseTiming     String
  benefits         String
  button_name      String
  button_link      String
  categoryId       Int
  orderby          Int
  slug             String     @unique @default(cuid())
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  status           Int        @default(0)
  tariffs          String     @db.Text
  category         Category   @relation(fields: [categoryId], references: [id])
  planning         Planning[]

  @@index([categoryId], map: "Course_categoryId_fkey")
}

model CoursePurchase {
  id        Int      @id @default(autoincrement())
  name      String
  dob       DateTime
  phone     String
  city      String
  activity  String
  slug      String   @unique @default(cuid())
  status    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Planning {
  id         Int      @id @default(autoincrement())
  plan_title String
  orderby    Int
  course_id  Int
  slug       String   @unique @default(cuid())
  status     Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  course     Course   @relation(fields: [course_id], references: [id])

  @@index([course_id], map: "Planning_course_id_fkey")
}

model Aboutus {
  id          Int      @id @default(autoincrement())
  name        String
  imageOne    String
  imageTwo    String
  imageThree  String
  description String   @db.Text
  button      String
  slug        String   @unique @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      Int      @default(0)
}

model CallToAction {
  id              Int      @id @default(autoincrement())
  name            String
  subName         String
  video_link      String
  backgroundImage String
  buttonName      String   @db.VarChar(255)
  slug            String   @unique @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  status          Int      @default(0)
}

model HomeAdvantage {
  id            Int             @id @default(autoincrement())
  name          String
  image         String          @db.VarChar(255)
  description   String          @db.Text
  slug          String          @unique @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  status        Int             @default(0)
  advantageList AdvantageList[]
}

model AdvantageList {
  id              Int           @id @default(autoincrement())
  name            String
  description     String        @db.Text
  homeadvantageId Int
  slug            String        @unique @default(cuid())
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  status          Int           @default(0)
  homeadvantage   HomeAdvantage @relation(fields: [homeadvantageId], references: [id])

  @@index([homeadvantageId], map: "AdvantageList_homeadvantageId_fkey")
}

model CourseCount {
  id         Int      @id @default(autoincrement())
  name       String
  count      String
  icon_image String
  slug       String   @unique @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  status     Int      @default(0)
}

model InstructorSection {
  id          Int         @id @default(autoincrement())
  name        String
  description String      @db.Text
  slug        String      @unique @default(cuid())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  status      Int         @default(0)
  Instructor  Instructor[]
}

model Instructor {
  id                  Int               @id @default(autoincrement())
  name                String
  instructorImage     String
  instructorSectionId Int               
  position            String
  email               String
  phone               String
  address             String
  description         String
  slug                String            @unique @default(cuid())
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  status              Int               @default(0)
  instructorSection   InstructorSection @relation(fields: [instructorSectionId], references: [id])
}

model NewsLetter {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @db.Text
  slug        String   @unique @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      Int      @default(0)
}

model History {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  image_one   String
  image_two   String
  image_three String
  status      Int      @default(0)
  slug        String   @unique @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model HistoryAccordian {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  slug        String   @unique @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderby     Int
  status      Int      @default(0)
}

model GeneralSetting {
  id           Int      @id @default(autoincrement())
  logo         String
  emailaddress String
  phonenumber  String
  address      String
  facebook     String
  instagram    String
  skype        String
  youtube      String
  pinterest    String
  twitter      String
  slug         String   @unique @default(cuid())
  status       Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Subscription {
  id        Int      @id @default(autoincrement())
  email     String
  slug      String   @unique @default(cuid())
  status    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContactUs {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  phonenumber String
  subject     String
  message     String
  slug        String   @unique @default(cuid())
  status      Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Employee {
  id                  Int                @id @default(autoincrement())
  name                String
  image               String
  description         String             @db.Text
  planing_description String             @db.Text
  orderby             Int
  slug                String             @unique @default(cuid())
  status              Int                @default(0)
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  partenaires_image   PartenairesImage[]
}

model PartenairesImage {
  id         Int      @id @default(autoincrement())
  image      String
  orderby    Int
  url        String
  employeeId Int
  slug       String   @unique @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  employee   Employee @relation(fields: [employeeId], references: [id])

  @@index([employeeId], map: "PartenairesImage_employeeId_fkey")
}

model News {
  id          Int      @id @default(autoincrement())
  image       String
  title       String
  description String   @db.Text
  orderby     Int
  slug        String   @unique @default(cuid())
  status      Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
