datasource db {
  provider = "mysql"
  url      = "mysql://asif:Asif@1234$@93.127.203.53:3306/asif"
}

generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/@prisma/asif/client/prisma-schema"
}

model Role {
  id        Int         @id @default(autoincrement())
  name      String
  user      AdminUser[]
  slug      String      @unique @default(cuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model AdminUser {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  firstname   String   @default(" ")
  lastname    String   @default(" ")
  phonenumber String   @default(" ")
  isactive    Int      @default(0)
  roleId      Int
  role        Role     @relation(fields: [roleId], references: [id])
  slug        String   @unique @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Banner {
  id               Int      @id @default(autoincrement())
  title            String
  shortDescription String   @db.VarChar(255)
  buttonName       String
  link             String
  youtubelink      String   @db.VarChar(255)
  image            Image[]
  slug             String   @unique @default(cuid())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  bannerId  Int
  banner    Banner   @relation(fields: [bannerId], references: [id])
  slug      String   @unique @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tab {
  id        Int        @id @default(autoincrement())
  name      String
  orderby   Int
  category  Category[]
  slug      String     @unique @default(cuid())
  status    Int        @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Category {
  id            Int      @id @default(autoincrement())
  name          String
  categoryImage String
  tabId         Int
  tab           Tab      @relation(fields: [tabId], references: [id])
  orderby       Int
  slug          String   @unique @default(cuid())
  status    Int        @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Course        Course[]
}

model Course {
  id               Int      @id @default(autoincrement())
  name             String
  courseImage      String
  coursethumbImage String
  courseTiming     String
  benefits         String
  button_name      String
  button_link      String
  categoryId       Int
  category         Category @relation(fields: [categoryId], references: [id])
  orderby          Int
  slug             String   @unique @default(cuid())
  status    Int        @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Aboutus {
  id          Int      @id @default(autoincrement())
  name        String
  imageOne    String
  imageTwo    String
  imageThree  String
  description String   @db.VarChar(255)
  button      String
  slug        String   @unique @default(cuid())
  status    Int        @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CallToAction {
  id              Int      @id @default(autoincrement())
  name            String
  subName         String
  video_link      String
  backgroundImage String
  buttonName      String   @db.VarChar(255)
  slug            String   @unique @default(cuid())
  status    Int        @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model HomeAdvantage {
  id            Int             @id @default(autoincrement())
  name          String
  image         String          @db.VarChar(255)
  description   String
  advantageList AdvantageList[]
  slug          String          @unique @default(cuid())
  status    Int        @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model AdvantageList {
  id              Int           @id @default(autoincrement())
  name            String
  description     String
  homeadvantageId Int
  homeadvantage   HomeAdvantage @relation(fields: [homeadvantageId], references: [id])
  slug            String        @unique @default(cuid())
  status    Int        @default(0)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model CourseCount {
  id         Int      @id @default(autoincrement())
  name       String
  count      String
  icon_image String
  slug       String   @unique @default(cuid())
  status    Int        @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model InstructorSection {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  slug        String       @unique @default(cuid())
  createdAt   DateTime     @default(now())
  status    Int        @default(0)
  updatedAt   DateTime     @updatedAt
  Instructor  Instructor?
}

model Instructor {
  id                  Int               @id @default(autoincrement())
  name                String
  instructorImage     String
  instructorSection   InstructorSection @relation(fields: [instructorSectionId], references: [id])
  instructorSectionId Int               @unique
  position            String
  email               String
  phone               String
  address             String
  description         String
  slug                String            @unique @default(cuid())
  status    Int        @default(0)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
}

model NewsLetter {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  slug        String   @unique @default(cuid())
  status    Int        @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
